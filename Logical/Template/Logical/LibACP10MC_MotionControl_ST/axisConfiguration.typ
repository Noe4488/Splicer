
TYPE
	global_command_typ : 	STRUCT  (*command structure for global commands*)
		Power : BOOL; (*switch on the controller of all axes*)
		Home : BOOL; (*reference all axes*)
		Stop : BOOL; (*stop everey active movement as long as is set (emergency stop)*)
		ErrorAcknowledge : BOOL; (*reset active errors*)
	END_STRUCT;
	psm_command_typ : 	STRUCT  (*command structure for power supply modules*)
		Power : BOOL; (*switch on the controller of the psm*)
		StartPowerMeter : BOOL; (*start the power evaluation of psm*)
		StopPowerMeter : BOOL; (*stop the power evaluation of psm*)
		RestartInterval : BOOL; (*restart the interval of power evaluation*)
	END_STRUCT;
	axis_command_typ : 	STRUCT  (*command structure for single and master axes*)
		Power : BOOL; (*switch on the controller*)
		Home : BOOL; (*reference axis*)
		MoveJogPos : BOOL; (*move in positive direction as long as is set*)
		MoveJogNeg : BOOL; (*move in negative direction as long as is set*)
		MoveAbsolute : BOOL; (*move to a defined position*)
		MoveAdditive : BOOL; (*move a defined distance*)
		MoveVelocity : BOOL; (*start a movement with a defined velocity*)
		Stop : BOOL; (*stop every active movement on the axis as long as is set*)
		Halt : BOOL; (*stop every active movement on the axis*)
	END_STRUCT;
	slave_command_typ : 	STRUCT  (*command structure for slave axes*)
		Power : BOOL; (*switch on the controller*)
		Home : BOOL; (*reference axis*)
		MoveJogPos : BOOL; (*move in positive direction as long as is set*)
		MoveJogNeg : BOOL; (*move in negative direction as long as is set*)
		MoveAbsolute : BOOL; (*move to a defined position*)
		MoveAdditive : BOOL; (*move a defined distance*)
		MoveVelocity : BOOL; (*start a movement with a defined velocity*)
		Stop : BOOL; (*stop every active movement on the axis as long as is set*)
		Halt : BOOL; (*stop every active movement on the axis*)
		StartAutomat : BOOL; (*start coupling between master and slave*)
		StopSlave : BOOL; (*stop coupling between master and slave (automat is still active)*)
		RestartAutomat : BOOL; (*reengage the coupling between master and slave*)
		EndAutomat : BOOL; (*terminate the automat*)
		SetSignal1 : BOOL; (*set the first signal of the automat*)
		SetSignal2 : BOOL; (*set the second signal of the automat*)
		SetSignal3 : BOOL; (*set the third signal of the automat*)
		SetSignal4 : BOOL; (*set the fourth signal of the automat*)
		ResetSignal1 : BOOL; (*reset the first signal of the automat*)
		ResetSignal2 : BOOL; (*reset the second signal of the automat*)
		ResetSignal3 : BOOL; (*reset the third signal of the automat*)
		ResetSignal4 : BOOL; (*reset the fourth signal of the automat*)
	END_STRUCT;
	parameter_typ : 	STRUCT  (*parameter structure*)
		Position : REAL; (*target position for MoveAbsolute-Command*)
		Distance : REAL; (*distance for MoveAdditive-Command*)
		Velocity : REAL; (*velocity for MoveVelocity-Command*)
		Direction : USINT; (*direction for commanded movements*)
		Acceleration : REAL; (*acceleration for commanded movements*)
		Deceleration : REAL; (*deceleration for commanded movements*)
		HomePosition : REAL; (*target position for referencing the axis*)
		HomeMode : USINT; (*homing mode*)
		JogVelocity : REAL; (*velocity for jogging movement*)
	END_STRUCT;
	psm_parameter_typ : 	STRUCT  (*parameter structure for psm*)
		IntervalTime : UINT; (*interval time for the power evaluation*)
	END_STRUCT;
	status_typ : 	STRUCT  (*status structure*)
		ActPosition : REAL; (*actual position of the axis*)
		ActVelocity : REAL; (*actual velocity of the axis*)
		DriveStatus : MC_DRIVESTATUS_TYP; (*actual status of the axis*)
	END_STRUCT;
	slave_status_typ : 	STRUCT  (*status structure*)
		ActPosition : REAL; (*actual position of the axis*)
		ActVelocity : REAL; (*actual velocity of the axis*)
		AutomatRunning : BOOL; (*if set, automat is running*)
		AutomatStandBy : BOOL; (*if set, automat is in stand by*)
		ActualStateIndex : USINT; (*actual state index of the cam automat*)
		ActualStateCamIndex : UINT; (*actual index of the cam profile*)
		InCam : BOOL; (*if set, the cam profile is active*)
		InCompensation : BOOL; (*if set, compensation is active*)
		DriveStatus : MC_DRIVESTATUS_TYP; (*actual status of the axis*)
	END_STRUCT;
	psm_status_typ : 	STRUCT  (*status structure for psm*)
		PowerData : MC_POWERDATA_REF; (*evaluated power data*)
		MissedInterval : UINT; (*MissedIntervals with power evaluation*)
		DriveStatus : MC_DRIVESTATUS_TYP; (*actual status of the axis*)
	END_STRUCT;
	axisState_typ : 	STRUCT  (*axis state structure*)
		Disabled : BOOL; (*if set, axis is in state Disabled*)
		StandStill : BOOL; (*if set, axis is in state StandsStill*)
		Homing : BOOL; (*if set, axis is in state Homing*)
		Stopping : BOOL; (*if set, axis is in state Stopping*)
		DiscreteMotion : BOOL; (*if set, axis is in state DiscreteMotion*)
		ContinuousMotion : BOOL; (*if set, axis is in state ContinuousMotion*)
		SynchronizedMotion : BOOL; (*if set, axis is in state SynchronizedMotion*)
		ErrorStop : BOOL; (*if set, axis is in state ErrorStop*)
	END_STRUCT;
	error_typ : 	STRUCT  (*error structure *)
		AxisErrorCount : UINT; (*number of active axis errors*)
		AxisWarningCount : UINT; (*number of active axis warinings*)
		FunctionBlockErrorCount : UINT; (*number of active function block errors*)
		ErrorRecord : MC_ERRORRECORD_REF; (*error record information*)
		ErrorText : ARRAY[0..3] OF STRING[79]; (*description of first active error or warning*)
	END_STRUCT;
	axis_typ : 	STRUCT  (*substructure for single and master axes*)
		Command : axis_command_typ; (*command structure for single and master axes*)
		Parameter : parameter_typ; (*parameter structure*)
		Status : status_typ; (*status structure*)
		AxisState : axisState_typ; (*axis state structure*)
		Error : error_typ; (*error structure*)
	END_STRUCT;
	slave_typ : 	STRUCT  (*substructure for slave axis*)
		Command : slave_command_typ; (*command structure for slave axes*)
		Parameter : parameter_typ; (*parameter structure*)
		Status : slave_status_typ; (*status structure*)
		AxisState : axisState_typ; (*axis state structure*)
		Error : error_typ; (*error structure*)
	END_STRUCT;
	psm_typ : 	STRUCT  (*substructure for psm*)
		Command : psm_command_typ; (*command structure for psm*)
		Parameter : psm_parameter_typ; (*parameter structure for psm*)
		Status : psm_status_typ; (*status structure for psm*)
		AxisState : axisState_typ; (*axis state structure*)
		Error : error_typ; (*error structure*)
	END_STRUCT;
	global_error_typ : 	STRUCT  (*error structure for global errors*)
		AxisTyp : STRING[10]; (*axis type (Axis, Master or Slave)*)
		AxisIndex : USINT; (*index of error reporting axis (total axis index)*)
		ErrorText : ARRAY[0..3] OF STRING[79]; (*description of first active error or warning*)
		ErrorRecord : MC_ERRORRECORD_REF; (*error record information*)
	END_STRUCT;
END_TYPE
